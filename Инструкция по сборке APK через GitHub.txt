Как собрать APK-файл без Android Studio с помощью GitHub ActionsЭтот метод позволит тебе автоматически создавать установочный файл .apk каждый раз, когда ты вносишь изменения в код. Тебе нужно будет сделать это один раз, а потом просто скачивать готовый файл.Шаг 1: Создание репозитория на GitHubЗарегистрируйся на GitHub, если у тебя еще нет аккаунта.Создай новый репозиторий. Нажми на + в правом верхнем углу и выбери New repository.Назови репозиторий (например, MyPiggyBankApp) и сделай его приватным (Private), если не хочешь, чтобы кто-то видел твой код.Нажми Create repository.Шаг 2: Загрузка файлов проекта в репозиторийТеперь тебе нужно загрузить все файлы, которые я предоставил, в твой новый репозиторий, сохраняя структуру папок.Создай структуру папок. В твоем репозитории на GitHub нажми Add file -> Create new file.Чтобы создать папку, введи ее название и поставь /. Например, чтобы создать файл build.gradle.kts в корне, просто введи build.gradle.kts. Чтобы создать файл MainActivity.kt в нужной папке, введи app/src/main/java/com/example/piggybank/MainActivity.kt. GitHub автоматически создаст все папки.Скопируй и вставь содержимое каждого файла из тех, что я дал выше, в соответствующие файлы в твоем репозитории.После вставки кода в каждый файл, нажимай Commit changes.Важно: Убедись, что пути к файлам точно совпадают. Например:build.gradle.kts (первый) — в корне проекта.app/build.gradle.kts (второй) — в папке app.app/src/main/java/com/example/piggybank/data/Database.ktapp/src/main/java/com/example/piggybank/ui/HomeScreen.ktИ так далее для всех файлов.Шаг 3: Настройка GitHub Actions для автоматической сборкиЭто магия, которая будет собирать твое приложение.В своем репозитории на GitHub перейди на вкладку Actions.GitHub может предложить тебе готовые шаблоны. Нажми на set up a workflow yourself.Откроется редактор файла. Полностью удали всё его содержимое.Скопируй и вставь туда следующий код:name: Android CI

on:
  push:
    branches: [ "main" ] # Запускать при изменениях в основной ветке
  workflow_dispatch: # Позволяет запускать вручную

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: 'gradle'

    - name: Grant execute permission for gradlew
      run: chmod +x ./gradlew

    - name: Build with Gradle
      run: ./gradlew assembleRelease

    - name: Upload APK
      uses: actions/upload-artifact@v3
      with:
        name: piggy-bank-apk
        path: app/build/outputs/apk/release/app-release-unsigned.apk
Сохрани файл. Нажми Commit changes. Можешь оставить название файла main.yml.Шаг 4: Запуск сборки и скачивание APKСборка запустится автоматически, как только ты сохранишь файл .yml.Чтобы проверить статус, перейди на вкладку Actions. Ты увидишь свой воркфлоу (процесс) с желтым значком (в процессе) или зеленым (успешно).Дождись завершения. Процесс займет несколько минут. Когда он закончится, значок станет зеленым.Скачай APK.Нажми на название завершенного процесса (например, Android CI).На открывшейся странице внизу будет раздел Artifacts.Там ты увидишь piggy-bank-apk. Нажми на него, чтобы скачать zip-архив.Распакуй архив. Внутри будет файл app-release-unsigned.apk.Передай этот файл на свой телефон (через кабель, Telegram, Google Drive и т.д.) и установи его.Готово! Теперь каждый раз, когда ты захочешь что-то поменять в коде (например, цвета или текст), ты просто редактируешь нужный файл на GitHub, сохраняешь изменения, и через несколько минут новый APK-файл будет ждать тебя в разделе Actions.Я постарался сделать дизайн приятным, с градиентами и мягкими тенями, чтобы приложением было приятно пользоваться. Если захочешь что-то изменить или добавить новые функции (например, защиту PIN-кодом или виджет), просто скажи!